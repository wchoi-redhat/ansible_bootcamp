- hosts: jumpbox
  gather_facts: false
  vars:
    webserver_name: web3
    databaseserver_name: db1
    haproxyserver_name: frontend1
    flavor_name: m1.small
    webserver_group: webservers
    database_group: databaseservers
    haproxy_group: haproxyservers
    deployment: dev
  tasks:
  - name: Create a server instance
    os_server:
      cloud: ospcloud
      name: "{{ webserver_name }}"
      image: rhel-guest
      meta: "group={{ webserver_group }},deployment_name={{ deployment }}"
      flavor: "{{ flavor_name }}"
      security_groups: ICMP_and_SSH
      key_name: ansible_ssh
      nics:
      - net-name: int_network
      userdata: |
        #!/bin/bash
        curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
        cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
        curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
        cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
    register: webserverip
  - name: Add floating IP to webserver
    os_floating_ip:
      cloud: ospcloud
      state: present
      reuse: yes
      server: "{{ webserver_name }}"
      network: ext_network
      wait: true
      timeout: 180
    register: webserverfloatingip
  - name: Show webserver public IP
    debug: var=webserverfloatingip.floating_ip.floating_ip_address
  - name: Show webserver private IP
    debug: var=webserverip.openstack.private_v4
  - name: Create a database server instance
    os_server:
      cloud: ospcloud
      name: "{{ databaseserver_name }}"
      image: rhel-guest
      meta: "group={{ databaseserver_group }},deployment_name={{ deployment }}"
      flavor: "{{ flavor_name }}"
      security_groups: ICMP_and_SSH
      key_name: ansible_ssh
      nics:
      - net-name: int_network
      userdata: |
        #!/bin/bash
        curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
        cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
        curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
        cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
    register: databaseserverip
  - name: Show databaseserver private IP
    debug: var=databaseserverip.openstack.private_v4

  - name: Create a haproxy server instance
    os_server:
      cloud: ospcloud
      name: "{{ haproxyserver_name }}"
      image: rhel-guest
      meta: "group={{ haproxyserver_group }},deployment_name={{ deployment }}"
      flavor: "{{ flavor_name }}"
      security_groups: ICMP_and_SSH
      key_name: ansible_ssh
      nics:
      - net-name: int_network
      userdata: |
        #!/bin/bash
        curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
        cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
        curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
        cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
    register: haproxyserverip
  - name: Add floating IP to haproxyserver
    os_floating_ip:
      cloud: ospcloud
      state: present
      reuse: yes
      server: "{{ haproxyserver_name }}"
      network: ext_network
      wait: true
      timeout: 180
    register: haproxyserverfloatingip
  - name: Show haproxyserver public IP
    debug: var=haproxyserverfloatingip.floating_ip.floating_ip_address
  - name: Show haproxyserver private IP
    debug: var=haproxyserverip.openstack.private_v4
